name: Run Pipelines on Command

on:
  # Only trigger workflow manually from GitHub UI
  workflow_dispatch:
    # Optional: Add input parameters that can be set when triggering the workflow
    inputs:
      script_name:
        description: 'Specific script to run (leave empty to run all)'
        required: false
        type: string  
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      python_version:
        description: 'Python version to use'
        required: false
        default: '3.12.4'
        type: string

env:
  CENSUS_API_KEY: ${{ secrets.CENSUS_API_KEY }}
  FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
  BLS_API_KEY: ${{ secrets.BLS_API_KEY }}

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Python scripts
      continue-on-error: true
      run: |
        echo "Starting to run Python scripts (excluding utils.py)..."
        for script in python_scripts/*.py; do
          filename=$(basename "$script")
          if [ "$filename" != "utils.py" ]; then
            echo "----------------------------------------"
            echo "Running $script..."
            python "$script" || echo "Script $filename failed, continuing to next script..."
            echo "Finished running $script"
          else
            echo "Skipping utils.py"
          fi
        done
        echo "----------------------------------------"
        echo "All scripts completed"

    - name: Debug Environment Variables
      if: always()
      run: |
        echo "Python Version: ${{ inputs.python_version }}"
        echo "Log Level: ${{ env.LOG_LEVEL }}"
        echo "Has CENSUS_API_KEY: ${{ env.CENSUS_API_KEY != '' }}"
        echo "Has FRED_API_KEY: ${{ env.FRED_API_KEY != '' }}"